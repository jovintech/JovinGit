name: Build and Conditional Release JovinGit

on:
  push:
    branches: [main]
    tags:
      - 'v*'  # Executa o release apenas para tags
  pull_request:

jobs:
  build:
    name: Build JovinGit
    runs-on: ubuntu-latest

    outputs:
      binary_name: ${{ steps.rename.outputs.binary_name }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake g++ pkg-config libgtkmm-3.0-dev

      - name: Build
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

      - name: Rename if release
        id: rename
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            mv build/JovinGit build/JovinGit-${VERSION}
            echo "binary_name=build/JovinGit-${VERSION}" >> $GITHUB_OUTPUT
          else
            echo "binary_name=build/JovinGit" >> $GITHUB_OUTPUT
          fi

  release:
    name: Create release only tags
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake g++ pkg-config libgtkmm-3.0-dev

      - name: Build
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build
          VERSION=${GITHUB_REF#refs/tags/}
          mv build/JovinGit build/JovinGit-${VERSION}
      
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Subir executável para o release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/JovinGit-${{ github.ref_name }}
          asset_name: JovinGit-${{ github.ref_name }}
          asset_content_type: application/octet-stream
